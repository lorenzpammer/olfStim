; This is the first test program for the LASOM2 controlled Olfactometer
; lpammer March, 13th 2011
;
;
; ------------------------------------------------------
; Trial Parameters
; These parameter definitions provide default values.
; They are usually overridden with external definitions.
; ------------------------------------------------------
;
Param, odorValveIndex, 1 		; odorValveIndex specifies two odor valves to be opened (N & air stream). Specified for each valve from host computer. range 1:9
;
; ------------------------------------------------------
; Session Parameters
; These parameter definitions provide default values.
; They are usually overridden at the start of a session.
; ------------------------------------------------------
;
Param, finalValveBeforeSniffing, 1	; 
Param, debug, 0				; in the debug mode the program will output several control signals.
;
; ------------------------------------------------------
; Configuration Parameters
; These parameter definitions relate to physical configuration.
; They are usually not overridden.
; ------------------------------------------------------
;
Param, finalValveIndex, 31              ; the final valve is the valve in front of the animal switching between the clean air & the odor.
Param, sniffingValveIndex, 32			; the sniffing valve is the valve which gates the suction of air through the nose
Param, exhaustValveIndex, 28			; the exhaust valve gates the suction around the delivery tube
Param, humidityValveIndex, 27			; the humidity valve gates the delivery of humid air to the nose
Param, odorValveFinalValveDelay, 3000	; 
Param, startTrialTrigger, $DigIn1 		; defines upon which trigger, the trial will start
Param, slave, 1                         ; defines from which slave module the valves are driven
;
;
; ------------------------------------------------------
; Trial Sequence Definition
; ------------------------------------------------------
;
WhileAlways
	IfIn,	startTrialTrigger, @startTrial
EndWhile
;
Label, @startTrial

Odor, slave, odorValveIndex		; Odor will open the specified two odor valves and will automatically trigger the dummy vial valves and thereby close the two dummy valves.
;
IfGen, finalValveBeforeSniffing		
	Wait, odorValveFinalValveDelay
	Gate, slave, finalValveIndex	; Triggers the final valve
	;
	Wait, 
;
	Dummy, slave			; the dummy command will automatically close all odor valves and depower the dummy valve (a normally open valve) 
EndGen
IfGen, finalValveBeforeSniffing,0	; if the parameter finalValveBeforeSniffing = 0 then do the following commands		
	Wait, odorValveFinalValveDelay
	Gate, slave, 
	Gate, slave, finalValveIndex	; Triggers the final valve
	Wait, 
;
	Dummy, slave			; the dummy command will automatically close all odor valves and depower the dummy valve (a normally open valve) 
EndGen

Idle,0,0

; ------------------------------------------------------
; Sequence file syntax
; ------------------------------------------------------
; Action Param1 Param2
;
; Wait Delay(ms)
; Odor Slave OdorVialIndex
; Dummy Slave
; Gate Slave GateValveIndex ; with the gate command every valve can be triggered independently
; UnGate Slave GateValveIndex
; Select Slave GateValveIndex
; Arm Slave
; Clear Slave
; Strobe Mask
; Param ParamName DefaultValue
; Monitor Input Output
; IfGen NonZero
; EndGen
; LoopGen RepeatCount
; Output BitNum Activate
; While Duration(ms)
; EndWhile
; Label LabelSymbol
; IfNotIn BitNum LabelSymbol
; IfIn BitNum LabelSymbol
;
; The sequencer ignores everything of a line after a semicolon (;) 
