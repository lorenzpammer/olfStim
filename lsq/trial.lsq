; This is the core program for the LASOM2 controlled Olfactometer
; This is the same for all subsequently assembled on top of the lines
; of this file.
;
; lorenzpammer October, 18th 2011
;
;
; ------------------------------------------------------
; Trial Parameters
; These parameter definitions provide default values.
; They are usually overridden with external definitions.
; ------------------------------------------------------
;
Param, odorValveIndex, 3 		; odorVal2veIndex specifies two gating odor valves to be opened (N & air stream). Specified for each valve from host computer. range 1:9
Param, numberComponents, 1     ; number of components in the presented odorant. If only a single odor then equals 1.
Param, trialNum, 7		; Number of the current trial
;
; ------------------------------------------------------
; Session Parameters
; These parameter definitions provide default values.
; They are usually overridden at the start of a session.
; ------------------------------------------------------
;
Param, debug, 0				; in the debug mode the program will output several control signals.
;
; ------------------------------------------------------
; Configuration Parameters
; These parameter definitions relate to physical configuration.
; They are usually not overridden.
; ------------------------------------------------------
;
Param, finalValveIndex, 31              ; the final valve is the valve in front of the animal switching between the clean air & the odor.
Param, sniffingValveIndex, 32			; the sniffing valve is the valve which gates the suction of air through the nose
Param, suctionValveIndex, 28			; the suction valve gates the suction around the delivery tube
Param, humidAirValveIndex, 27			; the humidity valve gates the delivery of humid air to the nose
Param, startTrialTrigger, $DigIn1 		; defines line which when high, will start the trial
Param, slave, 1                         ; defines from which slave module the valves are driven
Param, outputIndex, 
;
;
; ------------------------------------------------------
; Trial Sequence Definition
; ------------------------------------------------------
;
WhileAlways
	IfIn,	startTrialTrigger, @startTrial
EndWhile
;
;
Label, @startTrial

;
WhileAlways 			; enter an indefinite loop. 
CheckLapse, $Timer1, 10	; Check whether the timer >= P2
IfLapse, $Timer1, lapsedOut9		; If that's the case jump to the label indicated in P2.
EndWhile
;

label, lapsedOut9
; Cleaning the nose:
Gate, slaveIndex, sniffingValveIndex     ; Opens the sniffing valve. The index is set in the core lsq file
Output, $XlogicOut
;
Wait, 2000				; Wait for 2000ms
;
UnGate, slaveIndex, sniffingValveIndex     ; Closes the sniffing valve. The index is set in the core lsq file
;;
Output, $DigOut1, 10 		; outputs the defined time stamp (P2) to the hardware output defined in (P1)
;
Idle,0,0