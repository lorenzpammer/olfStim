; This is the test program for the LASOM2 controlled Olfactometer
; 
;
;
; ------------------------------------------------------
; Trial Parameters
; These parameter definitions provide default values.
; They are usually overridden with external definitions.
; ------------------------------------------------------
;
Param, odorValveIndex, 2 		; odorValveIndex specifies two gating odor valves to be opened (N & air stream). Specified for each valve from host computer. range 1:9
Param, numberComponents, 1     ; number of components in the presented odorant. If only a single odor then equals 1.
Param, trialNum, 1		; Number of the current trial
Param, startTrialTrigger, $DigIn1 		; defines line which when high, will start the trial
;
; ------------------------------------------------------
; Session Parameters
; These parameter definitions provide default values.
; They are usually overridden at the start of a session.
; ------------------------------------------------------
;
Param, debug, 0				; in the debug mode the program will output several control signals.
;
; ------------------------------------------------------
; Configuration Parameters
; These parameter definitions relate to physical configuration.
; They are usually not overridden.
; ------------------------------------------------------
;
Param, finalValveIndex, 31              ; the final valve is the valve in front of the animal switching between the clean air & the odor.
Param, sniffingValveIndex, 32			; the sniffing valve is the valve which gates the suction of air through the nose
Param, suctionValveIndex, 28			; the suction valve gates the suction around the delivery tube
Param, humidityValveIndex, 27			; the humidity valve gates the delivery of humid air to the nose
Param, slaveIndex, 1                         ; defines from which slave module the valves are driven
;
;
; ------------------------------------------------------
; Setup Variables
; These variables are set to a specific value and changed during the
; sequence of actions, which allows the host computer to monitor progress.
; ------------------------------------------------------
;
SetVar, $Var1, 0                        ; 
;
; ------------------------------------------------------
; Trial Sequence Definition
; ------------------------------------------------------
;
wait, 3000;
SetVar, $Var1, 1    ; Causes the sequencer to update the status, about the value of $Var1
EmitStatus          ; Causes the sequencer to emit the updated status to the host computer. This way the host computer knows, when the trial starts.
;
;
wait, 2000;
;
gate, slaveIndex, finalValveIndex;
;
Wait, 2000				; Wait for 2000ms
;
UnGate, slaveIndex, finalValveIndex 
;
wait, 2000
;
SetVar, $Var1, 0    ; Set $Var1 back to initial state indicating end of trial
EmitStatus          ; Send the new status of $Var1 to the host
Idle,0,0